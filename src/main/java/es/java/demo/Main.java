/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package es.java.demo;

import org.apache.http.HttpHost;

import org.elasticsearch.action.index.IndexRequest;
import org.elasticsearch.action.search.SearchRequest;
import org.elasticsearch.action.search.SearchResponse;
import org.elasticsearch.action.update.UpdateRequest;
import org.elasticsearch.client.RestHighLevelClient;
import org.elasticsearch.client.RestClient;
import org.elasticsearch.client.RestClientBuilder;
import org.elasticsearch.client.RequestOptions;
import org.elasticsearch.common.xcontent.XContentType;
import org.elasticsearch.index.query.QueryBuilders;
import org.elasticsearch.search.SearchHit;
import org.elasticsearch.search.builder.SearchSourceBuilder;

import java.util.Map;
import java.util.HashMap;


public class Main {

    public static void main(String[] args) {
        indexing();
        searchAll();
    }

    public static void indexing() {
        System.out.println("### Upsert Request");

        String index = "blogs";
        String docID = "1";
        Map<String, String> doc = new HashMap();
        doc.put("title", "test title");
        doc.put("body", "test body xxx");

        IndexRequest upsertRequest = new IndexRequest(index);
        upsertRequest.source(doc, XContentType.JSON);
        upsertRequest.id(docID);

        UpdateRequest updateRequest = new UpdateRequest(index, docID);
        updateRequest.upsert(upsertRequest);
        updateRequest.doc(doc, XContentType.JSON);

        RestClientBuilder restClientBuilder = RestClient.builder(new HttpHost("localhost", 9200, "http"));
        RestHighLevelClient esClient = new RestHighLevelClient(restClientBuilder);

        try {
            esClient.update(updateRequest, RequestOptions.DEFAULT);
            System.out.println("updated " + updateRequest);
            esClient.close();
        } catch (Exception e) {

        }
    }

    public static void searchAll() {
        System.out.println("### Search All Request");

        String index = "blogs";

        SearchRequest searchRequest = new SearchRequest(index);
        SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder();
        searchSourceBuilder.query(QueryBuilders.matchAllQuery());
        searchRequest.source(searchSourceBuilder);

        RestClientBuilder restClientBuilder = RestClient.builder(new HttpHost("localhost", 9200, "http"));
        RestHighLevelClient esClient = new RestHighLevelClient(restClientBuilder);

        try {
            SearchResponse response = esClient.search(searchRequest, RequestOptions.DEFAULT);
            SearchHit[] results = response.getHits().getHits();
            System.out.println("hit num : " + results.length);
            for (SearchHit hit : results) {
                System.out.println("article");
                Map sourceAsMap = hit.getSourceAsMap();
                System.out.println("- title : " + sourceAsMap.get("title"));
                System.out.println("- body : " + sourceAsMap.get("body"));
            }
            esClient.close();
        } catch (Exception e) {

        }
    }
}